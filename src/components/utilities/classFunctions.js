export const calcSorceryPoints = (level) => {
   return level > 1 ? level : 0;
}

export const calcSpellsKnown = (charClass, level) => {
   let result;
   switch (charClass) {
      case 'Sorcerer': 
         if (level < 12) result = level + 1;
         else if (level > 16) result = 15;
         else result = level - Math.floor((level - 12) / 2);
         break;   
      case 'Warlock':
         if (level < 10) result = level + 1;
         else result = level - Math.floor((level - 10) / 2);
         break;
   }
   return result;
}

export const calcSpellSlots = (charClass, level) => {
   return spellSlotsObj[charClass][level];
}

const spellSlotsObj = {
   Artificer: [],
   Barbarian: [],
   Bard: [],
   Cleric: [],
   Druid: [],
   Fighter: [],
   Monk: [],
   Paladin: [],
   Ranger: [],
   Rogue: [],
   Sorcerer: [
      [4, 2, 0, 0, 0, 0, 0, 0, 0, 0],
      [4, 3, 0, 0, 0, 0, 0, 0, 0, 0],
      [4, 4, 2, 0, 0, 0, 0, 0, 0, 0],
      [5, 4, 3, 0, 0, 0, 0, 0, 0, 0],
      [5, 4, 3, 2, 0, 0, 0, 0, 0, 0],
      [5, 4, 3, 3, 0, 0, 0, 0, 0, 0],
      [5, 4, 3, 3, 1, 0, 0, 0, 0, 0],
      [5, 4, 3, 3, 2, 0, 0, 0, 0, 0],
      [5, 4, 3, 3, 3, 1, 0, 0, 0, 0],
      [6, 4, 3, 3, 3, 2, 0, 0, 0, 0],
      [6, 4, 3, 3, 3, 2, 1, 0, 0, 0],
      [6, 4, 3, 3, 3, 2, 1, 0, 0, 0],
      [6, 4, 3, 3, 3, 2, 1, 1, 0, 0],
      [6, 4, 3, 3, 3, 2, 1, 1, 0, 0],
      [6, 4, 3, 3, 3, 2, 1, 1, 1, 0],
      [6, 4, 3, 3, 3, 2, 1, 1, 1, 0],
      [6, 4, 3, 3, 3, 2, 1, 1, 1, 1],
      [6, 4, 3, 3, 3, 3, 1, 1, 1, 1],
      [6, 4, 3, 3, 3, 3, 2, 1, 1, 1],
      [6, 4, 3, 3, 3, 3, 2, 2, 1, 1]
   ],
   Warlock: [],
   Wizard: [
      [3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [3, 2, 0, 0, 0, 0, 0, 0, 0, 0],
      [4, 3, 0, 0, 0, 0, 0, 0, 0, 0],
      [4, 3, 2, 0, 0, 0, 0, 0, 0, 0],
      [4, 3, 3, 0, 0, 0, 0, 0, 0, 0],
      [4, 3, 3, 1, 0, 0, 0, 0, 0, 0],
      [4, 3, 3, 2, 0, 0, 0, 0, 0, 0],
      [4, 3, 3, 3, 1, 0, 0, 0, 0, 0],
      [5, 3, 3, 3, 2, 0, 0, 0, 0, 0],
      [5, 3, 3, 3, 2, 1, 0, 0, 0, 0],
      [5, 3, 3, 3, 2, 1, 0, 0, 0, 0],
      [5, 3, 3, 3, 2, 1, 1, 0, 0, 0],
      [5, 3, 3, 3, 2, 1, 1, 0, 0, 0],
      [5, 3, 3, 3, 2, 1, 1, 1, 0, 0],
      [5, 3, 3, 3, 2, 1, 1, 1, 0, 0],
      [5, 3, 3, 3, 2, 1, 1, 1, 1, 1],
      [5, 3, 3, 3, 3, 1, 1, 1, 1, 1],
      [5, 3, 3, 3, 3, 2, 1, 1, 1, 1],
      [5, 3, 3, 3, 3, 2, 2, 1, 1, 1],
   ],
}

